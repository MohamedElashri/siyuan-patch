name: Update APT Repository

on:
  workflow_dispatch:
  # Optional: auto-update weekly
  # schedule:
  #   - cron: '0 3 * * 1'  # Every Monday at 3 AM UTC

jobs:
  update-apt:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y wget jq

      - name: Prepare folders and clean old files
        run: |
          rm -rf dists/
          mkdir -p dists/siyuan/main/binary-amd64

      - name: Fetch releases and generate Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tmp_dir="$(mktemp -d)"
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/MohamedElashri/siyuan-patch/releases?per_page=50" | \
            jq -r '
              .[] | select(.assets | map(.name) | any(endswith(".deb"))) | .tag_name as $tag |
              .assets[] | select(.name | endswith(".deb")) |
              "\($tag)\t\(.name)\t\(.size)"
            ' | while IFS=$'\t' read -r tag name size; do
              url="https://github.com/MohamedElashri/siyuan-patch/releases/download/$tag/$name"

              if [[ "$name" =~ siyuan-v?([0-9]+\.[0-9]+\.[0-9]+)-amd64\.deb ]]; then
                version="${BASH_REMATCH[1]}"
              else
                echo "Skipping: cannot parse version from $name"
                continue
              fi

              echo "Processing $name (v$version)"

              wget -q "$url" -O "$tmp_dir/$name"

              md5=$(md5sum "$tmp_dir/$name" | cut -d' ' -f1)
              sha256=$(sha256sum "$tmp_dir/$name" | cut -d' ' -f1)

              {
                echo "Package: siyuan"
                echo "Version: $version"
                echo "Architecture: amd64"
                echo "Maintainer: Mohamed Elashri <siyuan@elashri.com>"
                echo "Installed-Size: 102400"
                echo "Section: office"
                echo "Priority: optional"
                echo "Homepage: https://github.com/MohamedElashri/siyuan-patch"
                echo "Description: Patched SiYuan for Ubuntu/Pop!_OS"
                echo " SiYuan is a privacy-first personal knowledge management system."
                echo "Filename: $url"
                echo "Size: $size"
                echo "MD5sum: $md5"
                echo "SHA256: $sha256"
                echo ""
              } >> dists/siyuan/main/binary-amd64/Packages

              rm -f "$tmp_dir/$name"
            done

          gzip -c dists/siyuan/main/binary-amd64/Packages > dists/siyuan/main/binary-amd64/Packages.gz

          # Generate Release file with Date and basic fields
          printf '%s\n' \
            "Origin: Mohamed Elashri" \
            "Label: SiYuan Patched Builds" \
            "Suite: stable" \
            "Codename: siyuan" \
            "Architectures: amd64" \
            "Components: main" \
            "Description: Community-patched SiYuan for Ubuntu/Pop!_OS" \
            "Date: $(date -R)" \
            > dists/siyuan/Release

          # Append checksums: MD5, SHA256, and SHA1
          md5_packages=$(md5sum dists/siyuan/main/binary-amd64/Packages | cut -d' ' -f1)
          size_packages=$(wc -c < dists/siyuan/main/binary-amd64/Packages)
          md5_gz=$(md5sum dists/siyuan/main/binary-amd64/Packages.gz | cut -d' ' -f1)
          size_gz=$(wc -c < dists/siyuan/main/binary-amd64/Packages.gz)

          sha256_packages=$(sha256sum dists/siyuan/main/binary-amd64/Packages | cut -d' ' -f1)
          sha256_gz=$(sha256sum dists/siyuan/main/binary-amd64/Packages.gz | cut -d' ' -f1)

          sha1_packages=$(sha1sum dists/siyuan/main/binary-amd64/Packages | cut -d' ' -f1)
          sha1_gz=$(sha1sum dists/siyuan/main/binary-amd64/Packages.gz | cut -d' ' -f1)

          printf 'MD5Sum:\n %s %d main/binary-amd64/Packages\n %s %d main/binary-amd64/Packages.gz\n' \
            "$md5_packages" "$size_packages" \
            "$md5_gz" "$size_gz" >> dists/siyuan/Release
          
          printf 'SHA256:\n %s %d main/binary-amd64/Packages\n %s %d main/binary-amd64/Packages.gz\n' \
            "$sha256_packages" "$size_packages" \
            "$sha256_gz" "$size_gz" >> dists/siyuan/Release
          
          printf 'SHA1:\n %s %d main/binary-amd64/Packages\n %s %d main/binary-amd64/Packages.gz\n' \
            "$sha1_packages" "$size_packages" \
            "$sha1_gz" "$size_gz" >> dists/siyuan/Release
          
      - name: Ensure .nojekyll for raw files
        run: |
          touch .nojekyll

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add dists/siyuan/main/binary-amd64/Packages dists/siyuan/main/binary-amd64/Packages.gz dists/siyuan/Release .nojekyll
          git commit -m "Update APT repo $(date -I)" || echo "No changes to commit"
          git push
